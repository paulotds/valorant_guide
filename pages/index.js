import Head from 'next/head'
import React, { useEffect } from 'react';
import Rellax from 'rellax';
import Image from 'next/image'
import CardAgents from '../components/CardAgents';
import CardModes from '../components/CardModes';
import CardMaps from '../components/CardMaps';
import CardRanks from '../components/CardRanks';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer'
import styles from '../styles/Home.module.scss';
import Button from '../components/Button';
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/css';
import "swiper/css/navigation";
import "swiper/css/pagination";
import { Navigation } from "swiper";
import { Pagination } from "swiper";


export default function Home({ listAgent, listModes, listMaps, listRanks }) {
  let count = 0;
  let counts = 0;

  useEffect(() => {
    new Rellax ( ".animate", {
      speed: -2,
      center: false,
      wrapper: null,
      relativeToWrapper: false,
      round: true,
      vertical: true,
      horizontal: false,
    });
  }, []);


  const listFilter = listRanks.filter( (item) =>{
      const array = item.tierName.split(' ')
      return array[1] == 3 
      || array.length == 1 
  })  
  
  return (
    <div className={`${styles.container} container mx-auto`}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} antialiased`}>

          <Navbar />

          <section className={`${styles.banner} border border-gray-500 rounded-lg mt-9 grid grid-cols-2 relative`}>
              <div className={`${styles.info} flex-col`}>
                <h1 className="mb-4 antialiased">Valorant: o FPS <br></br>
                  competitivo 5x5
                </h1>
                <p className="antialiased">Um FPS tático 5x5 com personagens marcantes, mecânica de tiro precisa e <br></br>
                habilidades únicas! 
                </p>
                <Button href="./sobre">
                  SAIBA MAIS
                </Button>
              </div>
              <img src="/img/banner.png" className={`${styles.imgBanner}`} />
          </section>

          <section className={styles.sectionAgents}>
          <img className={`${styles.overlay1}`} src="./img/letter_overlay.png" />
          <img data-rellax-zindex="0" data-rellax-percentage="0.3" data-rellax-time="-5" className={`${styles.overlay2} animate`} src="./img/overlay3.png" />
          <img data-rellax-percentage="-0.3" data-rellax-time="-1" className={`${styles.overlay3} animate`} src="./img/overlay3.png" />
            <div className={styles.title}>
              <h2>Agentes</h2>
            </div>
              <Swiper grabCursor={true}  navigation={true} modules={[Navigation]} className={styles.card}
                breakpoints={{
                  // when window width is >= 640px
                  0: {
                    slidesPerView: 1,
                    spaceBetween: 0,
                  },
                  480: {
                    spaceBetween: 0,
                    slidesPerView: 1,
                  },
                  // when window width is >= 768px
                  768: {
                    spaceBetween: 15,
                    slidesPerView: 2,
                  },
                  1024: {
                    spaceBetween: 15,
                    slidesPerView: 3,
                  },
                  1280: {
                    spaceBetween: 15,
                    slidesPerView: 4,
                  },
                }}
                > 
                {listAgent.map( item => {
                  if(item.isPlayableCharacter) 
                    return (<SwiperSlide className={styles.swiper_slide} key={item.uuid}><CardAgents item={item} /></SwiperSlide>)
                })}
            </Swiper>
            <Button href="./sobre">
              Ver todos os agentes
            </Button>
          </section>

          <section className={styles.sectionModes}>
            <img className={styles.overlayModes} src="./img/modes-overlay.png" />
            <div className={styles.title}>
              <h2>Modos de Jogo</h2>
            </div>
            <div className={styles.gridCard}>
              {listModes.map( (item)  => {
                
                if(item.displayIcon && count < 4){
                  count++;
                  return (<CardModes key={item.uuid} item={item} />)
                } 
                  
              })}
            </div>
            <Button href="./sobre">
              Ver todos os modos
            </Button>
          </section>

          <section className={styles.sectionMaps}>
            <img data-rellax-time="-2" data-rellax-percentage="-0.2" className={`${styles.overlay2} animate`} src="./img/overlay2.png" />
            <div className={styles.title}>
            <img data-rellax-time="-4" data-rellax-percentage="-0.3" className={`${styles.overlay1} animate`} src="./img/letter_overlay.png" />
              <h2>Mapas</h2>
            </div>
            
              <Swiper pagination={true} modules={[Pagination]} className={styles.card}
              breakpoints={{
                // when window width is >= 640px
                0: {
                  slidesPerView: 1,
                  spaceBetween: 10,
                },
                480: {
                  spaceBetween: 0,
                  slidesPerView: 1,
                },
                // when window width is >= 768px
                768: {
                  spaceBetween: 0,
                  slidesPerView: 5,
                },
                1024: {
                  spaceBetween: 0,
                  slidesPerView: 6,
                },
                1280: {
                  spaceBetween: 0,
                  slidesPerView: 6,
                },
              }}
              > 
                {listMaps.map( item => {
                    return (<SwiperSlide className={styles.swiper_slide} key={item.uuid}><CardMaps item={item} /></SwiperSlide>)
                })}
              </Swiper>
          
          </section>
          
          <section className={styles.sectionRank}>
            <div className={styles.title}>
              <h2>Ranques</h2>
            </div>
            <div className={styles.gridCard}>
              {listFilter.reverse().map( (item)  => { 
                if(item.largeIcon && counts < 4){
                  counts++;
                  return (<CardRanks key={item.tier} item={item} />)
                }
              }
              )}
            </div>
            <Button variant="buttonRank" href="./sobre">
              Ver todos os ranques
            </Button>
          </section>

          <Footer />
      </main>
    </div>
  )
}

  export async function getStaticProps() {
    const resultAgent = await fetch(`https://valorant-api.com/v1/agents`);
    const jsonAgent = await resultAgent.json();
    
    const resultModes = await fetch(`https://valorant-api.com/v1/gamemodes?language=pt-BR`);
    const jsonModes = await resultModes.json();

    const resultMaps = await fetch(`https://valorant-api.com/v1/maps`);
    const jsonMaps = await resultMaps.json();

    const resultRanks = await fetch(`https://valorant-api.com/v1/competitivetiers/564d8e28-c226-3180-6285-e48a390db8b1?language=pt-BR`);
    const jsonRanks = await resultRanks.json();
    
  return {
    props: {
      listAgent: jsonAgent.data,
      listModes: jsonModes.data,
      listMaps: jsonMaps.data,
      listRanks: jsonRanks.data.tiers,
    }
  };
}
